const express = require('express');
const router = express.Router();
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const User = require('../models/User');

// ƒêƒÉng k√Ω
router.post('/register', async (req, res) => {
  const { name, email, phone, address, password, expoPushToken } = req.body;

  try {
    // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i ch∆∞a
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      return res.status(400).json({ message: 'Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng' });
    }

    // M√£ ho√° m·∫≠t kh·∫©u
    const hashedPassword = await bcrypt.hash(password, 10);

    // T·∫°o user m·ªõi
    const user = new User({
      name,
      email,
      phone,
      address,
      password: hashedPassword,
      expoPushToken // üëà L∆∞u token th√¥ng b√°o ƒë·∫©y n·∫øu c√≥
    });

    await user.save();

    // T·∫°o JWT token
    const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, { expiresIn: '7d' });

    res.status(201).json({ user: user.toJSON(), token });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'ƒê√£ x·∫£y ra l·ªói server khi ƒëƒÉng k√Ω' });
  }
});
// ƒêƒÉng nh·∫≠p
router.post('/login', async (req, res) => {
  const { email, password, expoPushToken } = req.body;

  try {
    // T√¨m ng∆∞·ªùi d√πng theo email
    const user = await User.findOne({ email });
    if (!user) return res.status(400).json({ message: 'Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng' });

    // So s√°nh m·∫≠t kh·∫©u
    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) return res.status(400).json({ message: 'Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng' });

    // N·∫øu client g·ª≠i expoPushToken m·ªõi => c·∫≠p nh·∫≠t
    if (expoPushToken && expoPushToken !== user.expoPushToken) {
      user.expoPushToken = expoPushToken;
      await user.save(); // C·∫≠p nh·∫≠t v√†o DB
    }

    // T·∫°o JWT token
    const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, { expiresIn: '7d' });

    res.status(200).json({ user: user.toJSON(), token });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'ƒê√£ x·∫£y ra l·ªói server khi ƒëƒÉng nh·∫≠p' });
  }
});
module.exports = router;
